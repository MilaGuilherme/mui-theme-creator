{"version":3,"file":"component---src-pages-404-js-b06b357b91a566a1a6d8.js","mappings":"6NAOe,SAASA,EAAaC,GACnC,MAAM,OACJC,EAAM,aACNC,EAAe,CAAC,GACdF,EACEG,EAAiC,mBAAXF,EAAwBG,IAAcH,SAP3DI,OADQA,EAQkED,IAPT,IAA5BE,OAAOC,KAAKF,GAAKG,OAOkCN,EAAeE,GARhH,IAAiBC,CAQ2G,EAAEJ,EAC5H,OAAoB,SAAK,EAAAQ,OAAQ,CAC/BR,OAAQE,GAEZ,C,eCLA,MANA,SAAsBH,GACpB,OAAoB,SAAK,GAAoB,OAAS,CAAC,EAAGA,EAAO,CAC/DE,aAAcA,EAAA,IAElB,C,wBCRA,MAAMA,GAAe,E,SAAA,KACrB,K,iGCAe,SAAS,EAAcQ,GACpC,IAAI,MACFV,EAAK,KACLW,GACED,EACJ,OCLa,SAAuBA,GACpC,IAAI,MACFV,EAAK,KACLW,EAAI,aACJT,GACEQ,EACJ,MAAME,GAAQ,EAAAC,EAAA,GAASX,GAMvB,OALoB,EAAAY,EAAA,GAAc,CAChCF,QACAD,OACAX,SAGJ,CDRS,CAAoB,CACzBA,QACAW,OACAT,aAAY,KAEhB,C,sBEZA,MAAMa,EAA8B,mBAAXC,QAAyBA,OAAOC,IACzD,IAAeF,EAAYC,OAAOC,IAAI,cAAgB,kB,uBCAtD,MAAMC,E,SAA4B,cAAoB,MAItD,K,iFCHe,SAASL,IAMtB,OALc,aAAiB,IAMjC,C,sGCFA,MAAMM,GAAQ,aAAY,CACxBC,IAAK,MACLC,SAAS,IAEI,SAASC,EAAqBtB,GAC3C,MAAM,YACJuB,EAAW,SACXC,GACExB,EACJ,OAAOuB,GAA2B,SAAK,EAAAE,EAAe,CACpDC,MAAOP,EACPK,SAAUA,IACPA,CACP,C,6HC2CA,MApCA,SAAuBxB,GACrB,MAAM,SACJwB,EACAZ,MAAOe,GACL3B,EACE4B,GAAa,EAAAf,EAAA,KAMbD,EAAQ,WAAc,KAC1B,MAAMiB,EAAwB,OAAfD,EAAsBD,EA9BzC,SAA8BC,EAAYD,GACxC,GAA0B,mBAAfA,EAOT,OANoBA,EAAWC,GAQjC,OAAO,OAAS,CAAC,EAAGA,EAAYD,EAClC,CAmBsDG,CAAqBF,EAAYD,GAInF,OAHc,MAAVE,IACFA,EAAOE,EAAA,GAAyB,OAAfH,GAEZC,CAAM,GACZ,CAACF,EAAYC,IAChB,OAAoB,SAAKV,EAAA,EAAac,SAAU,CAC9CN,MAAOd,EACPY,SAAUA,GAEd,E,sBC1CA,SAASS,EAAmBjC,GAC1B,MAAMY,GAAQ,SACd,OAAoB,SAAK,IAAyBoB,SAAU,CAC1DN,MAAwB,iBAAVd,EAAqBA,EAAQ,CAAC,EAC5CY,SAAUxB,EAAMwB,UAEpB,CAqCA,MAzBA,SAAuBxB,GACrB,MAAM,SACJwB,EACAZ,MAAOe,GACL3B,EACJ,OAAoB,SAAK,EAAkB,CACzCY,MAAOe,EACPH,UAAuB,SAAKS,EAAoB,CAC9CT,SAAUA,KAGhB,C,iDClCO,MAAMU,GAAqB,SAKlC,IAJA,WACE,IAAIhC,EAAeiC,UAAU3B,OAAS,QAAsB4B,IAAjBD,UAAU,GAAmBA,UAAU,GAAKD,EACvF,OAAO,OAAuBhC,EAChC,C,uECLe,SAASY,EAAcuB,GACpC,MAAM,MACJzB,EAAK,KACLD,EAAI,MACJX,GACEqC,EACJ,OAAKzB,GAAUA,EAAM0B,YAAe1B,EAAM0B,WAAW3B,IAAUC,EAAM0B,WAAW3B,GAAM4B,cAG/E,OAAa3B,EAAM0B,WAAW3B,GAAM4B,aAAcvC,GAFhDA,CAGX,C,sCCFA,IALA,WACE,IAAIE,EAAeiC,UAAU3B,OAAS,QAAsB4B,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,KACvF,MAAMK,GAAe,SACrB,OAAQA,IANanC,EAMiBmC,EALH,IAA5BlC,OAAOC,KAAKF,GAAKG,QAK6CgC,EAAftC,EANxD,IAAuBG,CAOvB,C,uECAe,SAASoC,EAAaF,EAAcvC,GACjD,MAAM6B,GAAS,OAAS,CAAC,EAAG7B,GAM5B,OALAM,OAAOC,KAAKgC,GAAcG,SAAQC,SACPP,IAArBP,EAAOc,KACTd,EAAOc,GAAYJ,EAAaI,GAClC,IAEKd,CACT,C,mHCVO,MAAMe,EAAO,CAAChC,EAAOiC,KAAsB,OAAS,CACzDC,oBAAqB,cAErBC,oBAAqB,YAIrBC,UAAW,aAEXC,qBAAsB,QACrBJ,GAAqB,CACtBK,YAAatC,EAAMuC,QAAQC,OAEhBC,EAAOzC,IAAS,OAAS,CACpC0C,MAAO1C,EAAMuC,QAAQI,KAAKC,SACzB5C,EAAM6C,WAAWC,MAAO,CACzBC,gBAAiB/C,EAAMuC,QAAQS,WAAWC,QAC1C,eAAgB,CAEdF,gBAAiB/C,EAAMuC,QAAQW,OAAOC,SAkD1C,MAhBA,SAAqBC,GACnB,MAAMhE,GAAQ,EAAAiE,EAAA,GAAc,CAC1BjE,MAAOgE,EACPrD,KAAM,oBAEF,SACJa,EAAQ,kBACRqB,GAAoB,GAClB7C,EACJ,OAAoB,UAAM,WAAgB,CACxCwB,SAAU,EAAc,SAAKzB,EAAA,EAAc,CACzCE,OAAQW,GA1CQ,SAAUA,GAE9B,IAAIsD,EAAmBC,EACvB,IAAIC,EAAgB,CAClBxB,KAAMA,EAAKhC,EAHWuB,UAAU3B,OAAS,QAAsB4B,IAAjBD,UAAU,IAAmBA,UAAU,IAIrF,yBAA0B,CACxBa,UAAW,WAEb,YAAa,CACXqB,WAAYzD,EAAM6C,WAAWa,gBAE/BjB,MAAM,OAAS,CACbkB,OAAQ,GACPlB,EAAKzC,GAAQ,CAGd,cAAe,CACb+C,gBAAiB/C,EAAMuC,QAAQS,WAAWC,YAIhD,MAAMW,EAA2D,OAAzCN,EAAoBtD,EAAM0B,aAA6F,OAA7D6B,EAAwBD,EAAkBO,qBAApD,EAAuFN,EAAsBO,eAIrL,OAHIF,IACFJ,EAAgB,CAACA,EAAeI,IAE3BJ,CACT,CAgBuBnE,CAAOW,EAAOiC,KAC7BrB,IAER,E,iCCvCA,MAXed,IAAgC,IAA/B,SAAEc,GAAuBd,EACvC,OACEiE,EAAAA,cAACrD,EAAAA,EAAoB,CAACC,aAAW,GAC/BoD,EAAAA,cAACC,EAAAA,EAAa,CAAChE,MAAOA,EAAAA,IACpB+D,EAAAA,cAACE,EAAW,MACXrD,GAEkB,C,oEChB3B,UARqBsD,IACnBH,EAAAA,cAACI,EAAAA,EAAM,KACLJ,EAAAA,cAACK,EAAAA,EAAG,CAACC,MAAM,mBACXN,EAAAA,cAAA,UAAI,aACJA,EAAAA,cAAA,SAAG,2D","sources":["webpack://material-ui-theme-creator/./node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","webpack://material-ui-theme-creator/./node_modules/@mui/material/GlobalStyles/GlobalStyles.js","webpack://material-ui-theme-creator/./node_modules/@mui/material/styles/defaultTheme.js","webpack://material-ui-theme-creator/./node_modules/@mui/material/styles/useThemeProps.js","webpack://material-ui-theme-creator/./node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","webpack://material-ui-theme-creator/./node_modules/@mui/private-theming/ThemeProvider/nested.js","webpack://material-ui-theme-creator/./node_modules/@mui/private-theming/useTheme/ThemeContext.js","webpack://material-ui-theme-creator/./node_modules/@mui/private-theming/useTheme/useTheme.js","webpack://material-ui-theme-creator/./node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js","webpack://material-ui-theme-creator/./node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","webpack://material-ui-theme-creator/./node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","webpack://material-ui-theme-creator/./node_modules/@mui/system/esm/useTheme.js","webpack://material-ui-theme-creator/./node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","webpack://material-ui-theme-creator/./node_modules/@mui/system/esm/useThemeWithoutDefault.js","webpack://material-ui-theme-creator/./node_modules/@mui/utils/esm/resolveProps.js","webpack://material-ui-theme-creator/./node_modules/@mui/material/CssBaseline/CssBaseline.js","webpack://material-ui-theme-creator/./src/components/Layout.tsx","webpack://material-ui-theme-creator/./src/pages/404.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from '../styles/defaultTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, _extends({}, props, {\n    defaultTheme: defaultTheme\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default GlobalStyles;","import createTheme from './createTheme';\nconst defaultTheme = createTheme();\nexport default defaultTheme;","import { useThemeProps as systemUseThemeProps } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nexport default function useThemeProps(_ref) {\n  let {\n    props,\n    name\n  } = _ref;\n  return systemUseThemeProps({\n    props,\n    name,\n    defaultTheme\n  });\n}","import getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps(_ref) {\n  let {\n    props,\n    name,\n    defaultTheme\n  } = _ref;\n  const theme = useTheme(defaultTheme);\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache'; // prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst cache = createCache({\n  key: 'css',\n  prepend: true\n});\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction InnerThemeProvider(props) {\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n    value: typeof theme === 'object' ? theme : {},\n    children: props.children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? InnerThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node\n} : void 0;\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n */\n\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: localTheme,\n    children: /*#__PURE__*/_jsx(InnerThemeProvider, {\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import createTheme from './createTheme';\nimport useThemeWithoutDefault from './useThemeWithoutDefault';\nexport const systemDefaultTheme = createTheme();\nfunction useTheme() {\n  let defaultTheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : systemDefaultTheme;\n  return useThemeWithoutDefault(defaultTheme);\n}\nexport default useTheme;","import { internal_resolveProps as resolveProps } from '@mui/utils';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return resolveProps(theme.components[name].defaultProps, props);\n}","import { useTheme as muiUseTheme } from '@mui/private-theming';\nfunction isObjectEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\nfunction useTheme() {\n  let defaultTheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  const contextTheme = muiUseTheme();\n  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;\n}\nexport default useTheme;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param {object} defaultProps\n * @param {object} props\n * @returns {object} resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = _extends({}, props);\n  Object.keys(defaultProps).forEach(propName => {\n    if (output[propName] === undefined) {\n      output[propName] = defaultProps[propName];\n    }\n  });\n  return output;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: theme.palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: theme.palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: theme.palette.common.white\n  }\n});\nexport const styles = function (theme) {\n  let enableColorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var _theme$components, _theme$components$Mui;\n  let defaultStyles = {\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: theme.palette.background.default\n      }\n    })\n  };\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default CssBaseline;","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { StyledEngineProvider, Theme, ThemeProvider } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\nimport theme from \"src/siteTheme\";\r\nimport \"./layout.css\";\r\n\r\ndeclare module '@mui/styles/defaultTheme' {\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\r\n  interface DefaultTheme extends Theme {}\r\n}\r\n\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst Layout = ({ children }: LayoutProps) => {\r\n  return (\r\n    <StyledEngineProvider injectFirst>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {children}\r\n      </ThemeProvider>\r\n    </StyledEngineProvider>\r\n  );\r\n}\r\n\r\nexport default Layout\r\n","/* eslint-disable react/jsx-pascal-case */\r\nimport React from \"react\"\r\n\r\nimport Layout from \"src/components/Layout\"\r\nimport SEO from \"src/components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n"],"names":["GlobalStyles","props","styles","defaultTheme","globalStyles","themeInput","obj","Object","keys","length","Global","_ref","name","theme","useTheme","getThemeProps","hasSymbol","Symbol","for","ThemeContext","cache","key","prepend","StyledEngineProvider","injectFirst","children","C","value","localTheme","outerTheme","output","mergeOuterLocalTheme","nested","Provider","InnerThemeProvider","systemDefaultTheme","arguments","undefined","params","components","defaultProps","contextTheme","resolveProps","forEach","propName","html","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","colorScheme","palette","mode","body","color","text","primary","typography","body1","backgroundColor","background","default","common","white","inProps","useThemeProps","_theme$components","_theme$components$Mui","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","MuiCssBaseline","styleOverrides","React","ThemeProvider","CssBaseline","NotFoundPage","Layout","SEO","title"],"sourceRoot":""}